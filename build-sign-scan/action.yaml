#
# MIT License
#
# (C) Copyright 2021-2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
name: Build Scan Push
description: Builds, scans, and pushes docker images
inputs:
  docker_repo:
    required: true
  docker_tag:
    required: true
  docker_push:
    required: true
  docker_registry:
    default: "artifactory.algol60.net"
  context_path:
    required: true
  artifactory_algol60_token:
    required: true
  # Not used after conversion of google-github-actions/setup-gcloud to google-github-actions/auth
  cosign_gcp_project_id:
    default: ""
    deprecationMessage: "not used anymore."
  # Deprecated in google-github-actions/auth if favor of workload identity provider authentication
  cosign_gcp_sa_key:
    default: ""
    deprecationMessage: "use cosign_gcp_workload_identity_provider and cosign_gcp_service_account instead."
  cosign_gcp_workload_identity_provider:
    default: ""
  cosign_gcp_service_account:
    default: ""
  cosign_key:
    required: true
  snyk_token:
    required: true
  github_sha:
    required: true
  fail_on_snyk_errors:
    default: false
  fail_on_trivy_action_vulnerabilities:
    default: false
  docker_build_args:
    default: ""
  docker_additional_tags:
    default: ""

runs:
  using: "composite"
  steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to algol60 Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ inputs.docker_registry }}
        username: github-actions-cray-hpe
        password: ${{ inputs.artifactory_algol60_token }}

    - name: Install cosign
      uses: sigstore/cosign-installer@main
      if: ${{ inputs.docker_push == 'true' }}
      with:
        cosign-release: 'v1.0.0'

    - name: Authenticate to GCP with Workload Identity Provider
      uses: google-github-actions/auth@v0
      if: ${{ inputs.docker_push  == 'true' && inputs.cosign_gcp_workload_identity_provider && inputs.cosign_gcp_service_account }}
      with:
        workload_identity_provider: ${{ inputs.cosign_gcp_workload_identity_provider }}
        service_account: ${{ inputs.cosign_gcp_service_account }}

    - name: Authenticate to GCP with SA Key
      uses: google-github-actions/auth@v0
      if: ${{ inputs.docker_push == 'true' && inputs.cosign_gcp_sa_key }}
      with:
        credentials_json: ${{ inputs.cosign_gcp_sa_key }}

    - name: Set up Cloud SDK for Signing
      uses: google-github-actions/setup-gcloud@v0
      if: ${{ inputs.docker_push == 'true' }}

    - id: date
      run: echo "::set-output name=now::$(date +'%Y-%m-%dT%H:%M:%S')"
      shell: bash

    - id: base-images
      run: |
        echo "::group::Evaluate Base Images"
        base_images=""
        for image in $(grep -i -E '^FROM .+:.+' ./${{ inputs.context_path }}/Dockerfile | awk '{ print $2 }'); do
            echo "Pulling image $image ..."
            docker pull $image
            base_images="${base_images} $(docker inspect $image --format '{{ index .RepoDigests 0 }}')"
        done
        base_images=${base_images# }
        echo "::set-output name=base_images::${base_images// /,}"
        echo "::endgroup::"
      shell: bash

    - name: Evaluate Docker Metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ inputs.docker_repo }}:${{ inputs.docker_tag }}
        tags: |
          type=raw,value=${{ inputs.docker_tag }}
        labels: |
          org.opencontainers.image.vendor=Hewlett Packard Enterprise Development LP
          baseImages=${{ steps.base-images.outputs.base_images }}
          buildDate=${{ steps.date.outputs.now }}

    - name: Build Image
      uses: docker/build-push-action@v2
      with:
        build-args: ${{ inputs.docker_build_args }}
        context: ${{ inputs.context_path }}
        push: ${{ inputs.docker_push }}
        load: ${{ (inputs.docker_push != 'true') && 'true' || 'false' }}
        tags: |
          ${{ inputs.docker_repo }}:${{ inputs.docker_tag }}
          ${{ inputs.docker_additional_tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Sign
      run: |
        if [[ "true" == "${{ inputs.docker_push }}" ]]; then
          COSIGN_KEY=${{ inputs.cosign_key }} cosign sign -key ${{ inputs.cosign_key }} -a GIT_HASH=${{ inputs.github_sha }} ${{ inputs.docker_repo }}:${{ inputs.docker_tag }}
          echo "::notice::Signed and pushed image ${{ inputs.docker_repo }}:${{ inputs.docker_tag }}"
        else
          echo "::notice::Skipping sign when not pushing to registry"
        fi
      shell: bash

    - name: Snyk Setup
      uses: Cray-HPE/github-actions/setup-snyk@main

    - name: Snyk Scan
      run: snyk test --docker ${{ inputs.docker_repo }}:${{ inputs.docker_tag }} || (exit ${{ inputs.fail_on_snyk_errors && '0' || '1' }} )
      shell: bash
      env:
        SNYK_TOKEN: ${{ inputs.snyk_token }}

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: config
        exit-code: ${{ inputs.fail_on_trivy_action_vulnerabilities && '0' || '1' }}
        scan-ref: '${{ inputs.context_path }}'
        severity: 'CRITICAL,HIGH'
        hide-progress: false
